Listings:
  get:
    tags:
      - Listings
    summary: Get all listings
    description: Retrieve all real estate listings from the database
    responses:
      200:
        description: Successfully retrieved all listings
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ListingsResponse'
            examples:
              success:
                summary: Successful response
                value:
                  message: 'Listings retrieved successfully'
                  listings:
                    - _id: '507f1f77bcf86cd799439011'
                      title: 'Beautiful Ocean View House'
                      price: 750000
                      image: 'https://res.cloudinary.com/demo/image/upload/house.jpg'
                      createdAt: '2025-10-10T10:30:00.000Z'
                      updatedAt: '2025-10-10T15:45:00.000Z'
                    - _id: '507f1f77bcf86cd799439012'
                      title: 'Modern Downtown Apartment'
                      price: 450000
                      image: 'https://res.cloudinary.com/demo/image/upload/apartment.jpg'
                      createdAt: '2025-10-10T11:30:00.000Z'
                      updatedAt: '2025-10-10T16:45:00.000Z'
                  count: 2
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ServerError'

  post:
    tags:
      - Listings
    summary: Create a new listing
    description: Create a new real estate listing
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../openapi.yaml#/components/schemas/ListingCreate'
          examples:
            create_listing:
              summary: Create listing request
              value:
                title: 'Modern Downtown Apartment'
                price: 450000
                image: 'https://example.com/apartment.jpg'
        multipart/form-data:
          schema:
            type: object
            properties:
              title:
                type: string
                example: 'Beautiful Ocean View House'
              price:
                type: number
                example: 750000
              image:
                type: string
                format: binary
                description: Image file upload
    responses:
      201:
        description: Listing created successfully
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ListingResponse'
      400:
        description: Bad request - validation error
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ValidationError'
      422:
        description: Unprocessable entity - empty request body
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ServerError'

ListingById:
  get:
    tags:
      - Listings
    summary: Get listing by ID
    description: Retrieve a specific real estate listing by its ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: objectid
          pattern: '^[0-9a-fA-F]{24}$'
          example: '507f1f77bcf86cd799439011'
        description: MongoDB ObjectId of the listing
    responses:
      200:
        description: Successfully retrieved the listing
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/Listing'
      400:
        description: Bad request - invalid listing ID
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ValidationError'
      404:
        description: Listing not found
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/NotFoundError'
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ServerError'

  put:
    tags:
      - Listings
    summary: Update listing by ID
    description: Update a specific real estate listing by its ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: objectid
          pattern: '^[0-9a-fA-F]{24}$'
          example: '507f1f77bcf86cd799439011'
        description: MongoDB ObjectId of the listing
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../openapi.yaml#/components/schemas/ListingUpdate'
        multipart/form-data:
          schema:
            type: object
            properties:
              title:
                type: string
                example: 'Updated Beautiful Ocean View House'
              price:
                type: number
                example: 850000
              image:
                type: string
                format: binary
                description: New image file upload
    responses:
      200:
        description: Listing updated successfully
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ListingResponse'
      400:
        description: Bad request - invalid listing ID or validation error
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ValidationError'
      404:
        description: Listing not found
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/NotFoundError'
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ServerError'

  delete:
    tags:
      - Listings
    summary: Delete listing by ID
    description: Delete a specific real estate listing by its ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: objectid
          pattern: '^[0-9a-fA-F]{24}$'
          example: '507f1f77bcf86cd799439011'
        description: MongoDB ObjectId of the listing
    responses:
      200:
        description: Listing deleted successfully
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ListingResponse'
      400:
        description: Bad request - invalid listing ID
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ValidationError'
      404:
        description: Listing not found
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/NotFoundError'
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/ServerError'
